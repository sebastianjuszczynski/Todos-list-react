{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","ButtonsSection/styled.js","ButtonsSection/index.js","TasksSection/styled.js","TasksSection/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["FormContainer","styled","form","FormInput","input","FormButton","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Button","red","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","ButtonsBox","div","Buttons","toggleHideDone","setAllDone","length","disabled","every","Container","section","ContainerHeader","h1","ContainerH2","h2","Section","title","subtitle","body","ButtonsContainer","article","ButtonsSection","TasksSection","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2a33932.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n    display: flex;\r\n    align-items: space-between;\r\n    background-color: #fff;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    width: 100%;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    flex-basis: 70%;\r\n    margin-right: 10px;\r\n    border: 2px solid #eee;\r\n    padding: 10px;\r\n    \r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin-right: 0;\r\n        margin-bottom: 5px;\r\n    }    \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background-color: teal;\r\n    color: #fff;\r\n    flex-basis: 30%;\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n    }\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        padding: 10px;\r\n    }  \r\n`;","import React, { useState } from \"react\";\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\";\r\n\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <FormButton>Dodaj zadanie!</FormButton>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    align-self: flex-start;\r\n    list-style: none;\r\n    padding: 0;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    background-color: #fff;\r\n    padding: 10px 10px 0 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 2px solid #eee;\r\n    margin-bottom: 5px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n`}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: hsl(120, 100%, 25%);\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n    padding: 5px;\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(120, 100%, 30%);\r\n    }\r\n\r\n    ${({ red }) => red && css`\r\n        background-color: hsl(0, 100%, 40%);\r\n    \r\n    &:hover {\r\n        background-color: hsl(0, 100%, 50%);\r\n    }\r\n    `}\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { List, Item, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <List>\r\n        {tasks.map(task => (\r\n            <Item\r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n                >\r\n                <Button\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                >\r\n                    {task.done ? \"‚úîÔ∏è\" : \"\"}\r\n                </Button>\r\n                <Button onClick={() => removeTask(task.id)} red>üóëÔ∏è</Button>\r\n                {task.content}\r\n            </Item>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsBox = styled.div`\r\n    flex-basis: 70%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin-bottom: 10px;\r\n }\r\n\r\n`;\r\nexport const Button = styled.button `\r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 0 20px 0 0;\r\n    transition: color 0.3s;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 0 0 10px 0;\r\n }\r\n\r\n    &:hover {\r\n        color: hsl(180, 100%, 30%);\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport { ButtonsBox, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <ButtonsBox>\r\n            <Button onClick={toggleHideDone}>\r\n                {hideDone ? \"Poka≈º\" : \"Ukryj\"} uko≈Ñczone\r\n        </Button>\r\n            <Button\r\n                onClick={setAllDone}\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Uko≈Ñcz wszystkie\r\n         </Button>\r\n        </ButtonsBox>\r\n    )\r\n};\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nexport const ContainerHeader = styled.h1`\r\n    align-self: flex-start;\r\n    margin-bottom: 0;\r\n\r\n    @media (max-width: 767px) {\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nexport const ContainerH2 = styled.h2`\r\n    background-color: #fff;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 1px;\r\n\r\n    @media (max-width: 767px) {\r\n        text-align: center;\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport { Container, ContainerHeader, ContainerH2 } from \"./styled\";\r\n\r\nconst Section = ({ title, subtitle, body }) => (\r\n    <Container>\r\n        <ContainerHeader>{title}</ContainerHeader>\r\n        <ContainerH2>{subtitle}</ContainerH2>\r\n        {body}\r\n    </Container>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.section`\r\n    display: flex;\r\n    width: 50%;\r\n    margin: 20px auto 0 auto;\r\n    background-color: #fff;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nexport const ContainerHeader = styled.article`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-basis: 100%;\r\n`;\r\n\r\nexport const ContainerH2 = styled.h2`\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    margin-bottom: 1px;\r\n    margin-top: 0;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n    }\r\n`","import React from \"react\";\r\nimport { ButtonsContainer, ContainerHeader, ContainerH2 } from \"./styled\"\r\n\r\n\r\n\r\nconst ButtonsSection = ({ title, body }) => (\r\n    <ButtonsContainer>\r\n        <ContainerHeader>\r\n            <ContainerH2>{title}</ContainerH2>\r\n            {body}\r\n        </ContainerHeader>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default ButtonsSection;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Container } from \"./styled\";\r\n\r\nconst TasksSection = ({ body }) => (\r\n    <Container>\r\n        {body}\r\n    </Container>\r\n);\r\n\r\nexport default TasksSection;","import React from \"react\";\r\n\r\n\r\nconst Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useEffect, useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport ButtonsSection from \"./ButtonsSection\";\nimport TasksSection from \"./TasksSection\";\nimport Container from \"./Container\";\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  const [tasks, setTasks] = useState(\n    tasksFromLocalStorage ? JSON.parse(tasksFromLocalStorage) : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\n  };\n\n  const addNewTask = (newTaskContent) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Section title=\"Lista zada≈Ñ\" subtitle=\"Dodaj nowe zadanie\" body={<Form addNewTask={addNewTask} />} />\n      <ButtonsSection title=\"Lista zada≈Ñ\" body={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />} />\n      <TasksSection body={<Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}