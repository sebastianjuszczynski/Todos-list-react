{"version":3,"sources":["GlobalStyle.js","features/tasks/Form/styled.js","features/tasks/tasksSlice.js","features/tasks/Form/index.js","features/tasks/TaskList/styled.js","features/tasks/TaskList/index.js","features/tasks/Buttons/styled.js","features/tasks/Buttons/index.js","common/Section/styled.js","common/Section/index.js","common/ButtonsSection/styled.js","common/ButtonsSection/index.js","common/TasksSection/styled.js","common/TasksSection/index.js","common/Container/index.js","features/tasks/Tasks.js","store.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","FormContainer","styled","form","FormInput","input","FormButton","button","tasksSlice","createSlice","name","initialState","tasks","hideDone","reducers","addTask","payload","push","toggleHideDone","state","toggleTaskDone","action","index","findIndex","task","id","done","removeTask","splice","setAllDone","forEach","actions","selectTasks","Form","useState","newTaskContent","setNewTaskContent","inputElement","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","content","trim","nanoid","current","focus","ref","value","placeholder","onChange","target","List","ul","Item","li","hidden","css","Button","red","TaskList","useSelector","map","onClick","ButtonsBox","div","Buttons","length","disabled","every","Container","section","ContainerHeader","h1","ContainerH2","h2","Section","title","subtitle","body","ButtonsContainer","article","ButtonsSection","TasksSection","children","Tasks","configureStore","reducer","tasksReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.e8f15feb.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n    box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n    font-family: 'Roboto', sans-serif;\r\n    background-color: #eee;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n    display: flex;\r\n    align-items: space-between;\r\n    background-color: #fff;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    width: 100%;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    flex-basis: 70%;\r\n    margin-right: 10px;\r\n    border: 2px solid #eee;\r\n    padding: 10px;\r\n    \r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin-right: 0;\r\n        margin-bottom: 5px;\r\n    }    \r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n    background-color: teal;\r\n    color: #fff;\r\n    flex-basis: 30%;\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(180, 100%, 30%);\r\n    }\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        padding: 10px;\r\n    }  \r\n`;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst tasksSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        tasks: [],\r\n        hideDone: false,\r\n    },\r\n    reducers: {\r\n        addTask: ({ tasks }, { payload }) => {\r\n            tasks.push(payload);\r\n        },\r\n        toggleHideDone: state => {\r\n            state.hideDone= !state.hideDone;\r\n        },\r\n        toggleTaskDone: (state, action) => {\r\n            const index = state.tasks.findIndex(task => task.id === action.payload);\r\n            state.tasks[index].done = !state.tasks[index].done\r\n        },\r\n        removeTask: (state, action) => {\r\n            const index = state.tasks.findIndex(task => task.id === action.payload);\r\n            state.tasks.splice(index, 1);\r\n        },\r\n        setAllDone: state => {\r\n            state.tasks.forEach(task => task.done = true);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addTask, toggleHideDone, toggleTaskDone, removeTask, setAllDone } = tasksSlice.actions;\r\nexport const selectTasks = state => state.tasks;\r\nexport default tasksSlice.reducer;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { FormContainer, FormInput, FormButton } from \"./styled\";\r\nimport { addTask } from \"../tasksSlice\";\r\n\r\n\r\nconst Form = () => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputElement = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        dispatch(addTask({\r\n            content: newTaskContent.trim(),\r\n            done: false,\r\n            id: nanoid(),\r\n        }));\r\n\r\n        setNewTaskContent(\"\");\r\n        inputElement.current.focus();\r\n    };\r\n\r\n    return (\r\n        <FormContainer onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                ref={inputElement}\r\n                value={newTaskContent}\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <FormButton>Dodaj zadanie!</FormButton>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default Form;","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    align-self: flex-start;\r\n    list-style: none;\r\n    padding: 0;\r\n    background-color: #fff;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    margin: 0;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    background-color: #fff;\r\n    padding: 10px 10px 0 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 2px solid #eee;\r\n    margin-bottom: 5px;\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n`}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: hsl(120, 100%, 25%);\r\n    font-weight: bold;\r\n    margin-right: 5px;\r\n    padding: 5px;\r\n    border: none;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: hsl(120, 100%, 30%);\r\n    }\r\n\r\n    ${({ red }) => red && css`\r\n        background-color: hsl(0, 100%, 40%);\r\n    \r\n    &:hover {\r\n        background-color: hsl(0, 100%, 50%);\r\n    }\r\n    `}\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTasks, toggleTaskDone, removeTask } from \"../tasksSlice\";\r\nimport { List, Item, Button } from \"./styled\";\r\n\r\nconst TaskList = () => {\r\n    const {tasks, hideDone} = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <List>\r\n            {tasks.map(task => (\r\n                <Item\r\n                    key={task.id}\r\n                    hidden={task.done && hideDone}\r\n                >\r\n                    <Button\r\n                        onClick={() => dispatch(toggleTaskDone(task.id))}\r\n                    >\r\n                        {task.done ? \"✔️\" : \"\"}\r\n                    </Button>\r\n                    <Button onClick={() => dispatch(removeTask(task.id))} red>🗑️</Button>\r\n                    {task.content}\r\n                </Item>\r\n            ))}\r\n        </List>\r\n    )\r\n};\r\n\r\nexport default TaskList;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsBox = styled.div`\r\n    flex-basis: 70%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n        margin-bottom: 10px;\r\n }\r\n\r\n`;\r\nexport const Button = styled.button `\r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 0 20px 0 0;\r\n    transition: color 0.3s;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n        margin: 0 0 10px 0;\r\n }\r\n\r\n    &:hover {\r\n        color: hsl(180, 100%, 30%);\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectTasks, toggleHideDone, setAllDone } from \"../tasksSlice\";\r\nimport { ButtonsBox, Button } from \"./styled\";\r\n\r\nconst Buttons = () => {\r\n    const { tasks, hideDone } = useSelector(selectTasks);\r\n    const dispatch = useDispatch();\r\n\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <ButtonsBox>\r\n            <Button onClick={() => dispatch(toggleHideDone())}>\r\n                {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone\r\n        </Button>\r\n            <Button\r\n                onClick={() => dispatch(setAllDone())}\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Ukończ wszystkie\r\n         </Button>\r\n        </ButtonsBox>\r\n    )\r\n};\r\n\r\nexport default Buttons;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nexport const ContainerHeader = styled.h1`\r\n    align-self: flex-start;\r\n    margin-bottom: 0;\r\n\r\n    @media (max-width: 767px) {\r\n        align-self: center;\r\n    }\r\n`;\r\n\r\nexport const ContainerH2 = styled.h2`\r\n    background-color: #fff;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n    padding: 20px;\r\n    margin-bottom: 1px;\r\n\r\n    @media (max-width: 767px) {\r\n        text-align: center;\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport { Container, ContainerHeader, ContainerH2 } from \"./styled\";\r\n\r\nconst Section = ({ title, subtitle, body }) => (\r\n    <Container>\r\n        <ContainerHeader>{title}</ContainerHeader>\r\n        <ContainerH2>{subtitle}</ContainerH2>\r\n        {body}\r\n    </Container>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.section`\r\n    display: flex;\r\n    width: 50%;\r\n    margin: 20px auto 0 auto;\r\n    background-color: #fff;\r\n    box-shadow: 1px 1px 3px 1px #ccc;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;\r\nexport const ContainerHeader = styled.article`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-basis: 100%;\r\n`;\r\n\r\nexport const ContainerH2 = styled.h2`\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    margin-bottom: 1px;\r\n    margin-top: 0;\r\n\r\n    @media (max-width: 767px) {\r\n        flex-basis: 100%;\r\n    }\r\n`","import React from \"react\";\r\nimport { ButtonsContainer, ContainerHeader, ContainerH2 } from \"./styled\"\r\n\r\n\r\n\r\nconst ButtonsSection = ({ title, body }) => (\r\n    <ButtonsContainer>\r\n        <ContainerHeader>\r\n            <ContainerH2>{title}</ContainerH2>\r\n            {body}\r\n        </ContainerHeader>\r\n    </ButtonsContainer>\r\n);\r\n\r\nexport default ButtonsSection;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 767px) {\r\n        width: 100%;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Container } from \"./styled\";\r\n\r\nconst TasksSection = ({ body }) => (\r\n    <Container>\r\n        {body}\r\n    </Container>\r\n);\r\n\r\nexport default TasksSection;","import React from \"react\";\r\n\r\n\r\nconst Container = ({ children }) => (\r\n    <main>\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React from 'react';\nimport Form from \"./Form\";\nimport TaskList from \"./TaskList\";\nimport Buttons from \"./Buttons\";\nimport Section from \"../../common/Section\";\nimport ButtonsSection from \"../../common/ButtonsSection\";\nimport TasksSection from \"../../common/TasksSection\";\nimport Container from \"../../common/Container\";\n\n\n\n\nfunction Tasks() {\n\n  return (\n    <Container>\n      <Section title=\"Lista zadań\" subtitle=\"Dodaj nowe zadanie\" body={<Form />} />\n      <ButtonsSection title=\"Lista zadań\" body={<Buttons />} />\n      <TasksSection body={<TaskList />} />\n    </Container>\n  );\n}\n\nexport default Tasks;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport tasksReducer from './features/tasks/tasksSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        tasks: tasksReducer,\r\n    },\r\n});\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './features/tasks/Tasks';\nimport store from \"./store\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}