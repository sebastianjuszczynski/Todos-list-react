{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","ButtonsSection/index.js","TasksSection/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","placeholder","onChange","target","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","disabled","every","Section","title","subtitle","body","ButtonsSection","TasksSection","Container","props","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cb73275.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n\r\n    return (\r\n        <form className=\"container__form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button\r\n                className=\"form__button\">Dodaj zadanie!</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n    <ul className=\"container__tasks\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`tasks__item${task.done && hideDone ? \" tasks__item--hidden\" : \"\"}`}>\r\n                <button\r\n                    onClick={() => toggleTaskDone(task.id)}\r\n                    className=\"container__tasks__done\">{`${task.done ? \"‚úîÔ∏è\" : \"\"}`}</button>\r\n                <button onClick={() => removeTask(task.id)} className=\"container__tasks__remove\">üóëÔ∏è</button>\r\n                {task.content}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\r\n    if (tasks.length === 0) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button onClick={toggleHideDone} className=\"hideButton\">\r\n                {hideDone ? \"Poka≈º\" : \"Ukryj\"} uko≈Ñczone\r\n        </button>\r\n            <button\r\n                onClick={setAllDone}\r\n                className=\"allDone\"\r\n                disabled={tasks.every(({ done }) => done)}\r\n            >\r\n                Uko≈Ñcz wszystkie\r\n         </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, subtitle, body }) => (\r\n    <section className=\"container\">\r\n        <h1 className=\"container__header\">{title}</h1>\r\n        <h2 className=\"container__h2\">{subtitle}</h2>\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst ButtonsSection = ({ title, body }) => (\r\n    <section className=\"buttons__container\">\r\n        <article className=\"buttons__container__header\">\r\n            <h2 className=\"buttons__container__h2\">{title}</h2>\r\n            {body}\r\n        </article>\r\n    </section>\r\n);\r\n\r\nexport default ButtonsSection;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst TasksSection = ({ body }) => (\r\n    <section className=\"container\">\r\n        {body}\r\n    </section>\r\n);\r\n\r\nexport default TasksSection;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Container = (props) => (\r\n    <main className=\"main__container\">\r\n        {props.children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import React, { useEffect, useState } from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport ButtonsSection from \"./ButtonsSection\";\nimport TasksSection from \"./TasksSection\";\nimport Container from \"./Container\";\n\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  const [tasks, setTasks] = useState(\n    tasksFromLocalStorage ? JSON.parse(tasksFromLocalStorage) : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\n  };\n\n  const addNewTask = (newTaskContent) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n  return (\n    <Container>\n      <Section title=\"Lista zada≈Ñ\" subtitle=\"Dodaj nowe zadanie\" body={<Form addNewTask={addNewTask} />} />\n      <ButtonsSection title=\"Lista zada≈Ñ\" body={<Buttons tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} setAllDone={setAllDone} />} />\n      <TasksSection body={<Tasks tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}